[Keyword]: greater_than_2bit

[Design Category]: Combinational Logic

[Design Function Description]:  
This design implements a 2-bit comparator that determines if the first 2-bit input `a` is greater than the second 2-bit input `b`. The output `gt` is asserted (set to 1) if `a` is greater than `b`.

[Input Signal Description]:  
- `a[1:0]`: A 2-bit input signal representing the first number to be compared.
- `b[1:0]`: A 2-bit input signal representing the second number to be compared.

[Output Signal Description]:  
- `gt`: A 1-bit output signal that is asserted (1) if the input `a` is greater than the input `b`, otherwise it is deasserted (0).


[Design Detail]:
`timescale 1ns / 1ps

module greater_than_2bit(
	input  wire[1:0] a,b,
	output wire gt
    );
	 
	 //signal declarations for terms in sum-of-product 
	 wire sp1,sp2,sp3,sp4,sp5,sp6;
	 
	 //use table as reference
	 assign sp1= !a[1] & a[0] & !b[1] & !b[0];
	 assign sp2= a[1] & !a[0] & !b[1] & !b[0];
	 assign sp3= a[1] & !a[0] & !b[1] & b[0];
	 assign sp4= a[1] & a[0] & !b[1] & !b[0];
	 assign sp5= a[1] & a[0] & !b[1] & b[0];
	 assign sp6= a[1] & a[0] & b[1] & !b[0];
	 
	 assign gt = sp1 || sp2 || sp3 || sp4 || sp5 || sp6;


endmodule
