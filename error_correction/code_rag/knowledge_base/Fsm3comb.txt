[Keyword]: Fsm3comb

[Design Category]: Sequential Logic

[Design Function Description]:
This design implements a Moore state machine with four states (A, B, C, D). The state transitions depend on the current state and an input signal. The output is determined solely by the current state.

[Input Signal Description]:
- `in`: A single-bit input signal that influences state transitions.
- `state[1:0]`: A 2-bit signal representing the current state of the state machine.

[Output Signal Description]:
- `nextstate[1:0]`: A 2-bit signal representing the next state of the state machine based on the current state and input.
- `out`: A single-bit output signal that is high (1) when the state machine is in state D, and low (0) otherwise.

[Design Detail]: 
```verilog
module topmodule(
    input in,
    input [1:0] state,
    output [1:0] nextstate,
    output out); //

    parameter A=0, B=1, C=2, D=3;

    // State transition logic: nextstate = f(state, in)
    always @(*) begin
        case (state)
            A: nextstate <= in ? B : A;
            B: nextstate <= in ? B : C;
            C: nextstate <= in ? D : A;
            D: nextstate <= in ? B : C;
        endcase
    end

    // Output logic:  out = f(state) for a Moore state machine
    assign out = (state == D);

endmodule
```