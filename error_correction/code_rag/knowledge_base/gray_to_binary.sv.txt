[Keyword]: gray_to_binary.sv

[Design Category]: Combinational Logic

[Design Function Description]:
The circuit is a Gray code to binary converter. It takes an N-bit Gray code input and converts it to an N-bit binary output. Gray code is a binary numeral system where two successive values differ in only one bit, and this module translates that into a standard binary representation.

[Input Signal Description]:
A[N-1:0]: An N-bit input signal representing a number in Gray code format.

[Output Signal Description]:
Z[N-1:0]: An N-bit output signal representing the equivalent binary number of the input Gray code.


[Design Detail]:
// Copyright 2018 ETH Zurich and University of Bologna.
//
// Copyright and related rights are licensed under the Solderpad Hardware
// License, Version 0.51 (the "License"); you may not use this file except in
// compliance with the License. You may obtain a copy of the License at
// http://solderpad.org/licenses/SHL-0.51. Unless required by applicable law
// or agreed to in writing, software, hardware and materials distributed under
// this License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
// CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.
//
// Fabian Schuiki <fschuiki@iis.ee.ethz.ch>

/// A gray code to binary converter.
module gray_to_binary #(
    parameter int N = -1
)(
    input  logic [N-1:0] A,
    output logic [N-1:0] Z
);
    for (genvar i = 0; i < N; i++)
        assign Z[i] = ^A[N-1:i];
endmodule
