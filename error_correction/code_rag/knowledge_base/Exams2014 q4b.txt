[Keyword]: Exams2014 q4b

[Design Category]: Sequential Logic

[Design Function Description]:
The design implements a shift register with load and enable functionality. Each stage of the shift register is controlled by a multiplexer and a D flip-flop. The circuit can load new data from the switches (SW) or shift the data based on the enable (E) and load (L) signals.

[Input Signal Description]:
- SW[3:0]: 4-bit input signal used to load new data into the shift register.
- KEY[0]: Clock signal (clk) for synchronizing the data shifting/loading.
- KEY[1]: Enable signal (E) that allows data to be shifted when high.
- KEY[2]: Load signal (L) that allows new data from SW to be loaded into the register when high.
- KEY[3]: Initial input for the first stage of the shift register.

[Output Signal Description]:
- LEDR[3:0]: 4-bit output signal representing the current state of the shift register. Each bit corresponds to the output of a stage in the register.

[Design Detail]: 
```verilog
module topmodule (
    input [3:0] SW,
    input [3:0] KEY,
    output [3:0] LEDR
); //
    
    MUXDFF ins0(SW[3], KEY[0], KEY[1], KEY[2], KEY[3], LEDR[3]);
    MUXDFF ins1(SW[2], KEY[0], KEY[1], KEY[2], LEDR[3], LEDR[2]);
    MUXDFF ins2(SW[1], KEY[0], KEY[1], KEY[2], LEDR[2], LEDR[1]);
    MUXDFF ins3(SW[0], KEY[0], KEY[1], KEY[2], LEDR[1], LEDR[0]);

endmodule

module MUXDFF (
    input R,
    input clk,
    input E,
    input L,
    input w,
    output reg out
);
    wire [1:0] mid;
    assign mid[0] = E ? w : out;
    assign mid[1] = L ? R : mid[0];
    
    always @(posedge clk) begin
        out <= mid[1];
    end

endmodule
```