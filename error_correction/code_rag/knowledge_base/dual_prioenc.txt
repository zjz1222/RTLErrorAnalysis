[Keyword]: dual_prioenc

[Design Category]: Combinational Logic

[Design Function Description]:
The design is a dual priority encoder. It scans a 12-bit input vector to identify the positions of the first and second highest priority '1' bits. The position of the first '1' bit found is stored in the `first` output, and the position of the second '1' bit is stored in the `second` output.

[Input Signal Description]:
`in[11:0]`: A 12-bit input signal where each bit can be either '0' or '1'. The circuit will prioritize the bits from the most significant to the least significant to determine the positions of the first and second '1' bits.

[Output Signal Description]:
`first[3:0]`: A 4-bit output signal representing the position (1-based index) of the first '1' bit found in the input.
`second[3:0]`: A 4-bit output signal representing the position (1-based index) of the second '1' bit found in the input.


[Design Detail]:
`timescale 1ns / 1ps

module dual_prioenc(
	input wire[11:0] in,
	output reg[3:0] first,second
    );
	 integer i;

	 always @(in) begin
	 first=4'd0;
	 second=4'd0;

	 
	 for(i=11;i>=0;i=i-1) begin  //use for-loop to locate the bit "1"
	 if(in[i] && !first) first=i+1;
	 else if(first && in[i] && !second) second=i+1; //if "first" already has a value,then the next bit of 1 will be the "second"
	 end
	 end
	
endmodule 
